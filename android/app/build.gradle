apply plugin: 'com.android.application'


android {
    signingConfigs {
        release {
            try {
                storeFile file(KEYSTORE_FILE_PATH)
                storePassword KEYSTORE_PASSWORD
                keyAlias "malalaoshi"
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                throw new InvalidUserDataException(
                        "You should define KEYSTORE_FILE_PATH, KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }

        debug {
            try {
                storeFile file(KEYSTORE_FILE_PATH)
                storePassword KEYSTORE_PASSWORD
                keyAlias "malalaoshi"
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                throw new InvalidUserDataException(
                        "You should define KEYSTORE_FILE_PATH, KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }
        }
    }
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        applicationId "com.malalaoshi.android"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 9
        versionName "2.2.0"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            manifestPlaceholders = [jpush_key: PARENT_JPUSH_KEY_DEBUG]
            buildConfigField("String", "API_HOST", "\"" + DEV_SERVER + "\"")
            resValue("string", "api_host", "\"" + DEV_SERVER + "\"")
            resValue("string", "build_type", "debug")
        }
        devrelease {
            //重置ShareSDK中appId和appSecret
            initShareSdk(PARENT_APP_ID_DEV,PARENT_APP_SECRET_DEV)
            applicationIdSuffix ".dev"
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [jpush_key: PARENT_JPUSH_KEY_DEV]
            buildConfigField("String", "API_HOST", "\"" + DEV_SERVER + "\"")
            resValue("string", "api_host", "\"" + DEV_SERVER + "\"")
            resValue("string", "build_type", "release")
        }
        stagerelease {
            initShareSdk(PARENT_APP_ID_STAGE,PARENT_APP_SECRET_STAGE)
            applicationIdSuffix ".stage"
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [jpush_key: PARENT_JPUSH_KEY_STAGE]
            buildConfigField("String", "API_HOST", "\"" + STAGE_SERVER + "\"")
            resValue("string", "api_host", "\"" + STAGE_SERVER + "\"")
            resValue("string", "build_type", "release")
        }
        prdrelease {
            initShareSdk(PARENT_APP_ID_RELEASE,PARENT_APP_SECRET_RELEASE)
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [jpush_key: PARENT_JPUSH_KEY_RELEASE]
            buildConfigField("String", "API_HOST", "\"" + PRD_SERVER + "\"")
            resValue("string", "api_host", "\"" + PRD_SERVER + "\"")
            resValue("string", "build_type", "release")
        }
    }

    lintOptions {
        abortOnError true
    }

    productFlavors {
        teacher {
            applicationId "com.malalaoshi.android.teacher"
        }
        parent {
            applicationId "com.malalaoshi.android.parent"
        }
    }

    packagingOptions {
        exclude '.readme'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

def initShareSdk(appId, appSecret) {

    def DevInfor = new XmlParser().parse(file("src/main/assets/ShareSDK.xml"))
    DevInfor.ShareSDK.@AppKey = PARENT_SHARESDK_APP_KEY
    DevInfor.Wechat.@AppId = appId
    DevInfor.Wechat.@AppSecret = appSecret
    DevInfor.WechatMoments.@AppId = appId
    DevInfor.WechatMoments.@AppSecret = appSecret
    println DevInfor.ShareSDK.@AppKey
    println DevInfor.Wechat.@AppId
    println DevInfor.Wechat.@AppSecret
    println DevInfor.WechatMoments.@AppId
    println DevInfor.WechatMoments.@AppSecret

    StringWriter sw = new StringWriter();
    PrintWriter pw = new PrintWriter(sw);
    XmlNodePrinter nodePrinter = new XmlNodePrinter(pw);
    nodePrinter.setPreserveWhitespace(true);
    nodePrinter.print(DevInfor);
    //println sw.toString();

    file("src/main/assets/ShareSDK.xml").withPrintWriter { printWriter ->
        printWriter.println('<?xml version="1.0" encoding="utf-8"?>')
        printWriter.println(sw.toString())
        printWriter.flush()
        printWriter.close()
    }

    pw.flush()
    pw.close()

    sw.flush()
    sw.close()

    /*
           def filedir = new File("/Users/kang/malalaoshi/mala/android/app/src/devrelease/assets/ShareSDK.xml")
           if (filedir.exists())
           filedir.delete()

           def printWriter = filedir.newPrintWriter() //
           printWriter.write("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n")
           printWriter.write(sw.toString())

           printWriter.flush()
           printWriter.close()*/

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:design:23.1.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.5'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.5'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.pnikosis:materialish-progress:1.7'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'se.emilsjolander:android-flipview:1.1.0'
    compile project(':pingpp')
    compile project(':pingpp_one')
    compile project(':core')
    compile project(':ui')
    compile project(':report')
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.okio:okio:1.6.0'
    compile 'me.relex:circleindicator:1.2.1'
    compile files('libs/MobCommons-2016.0816.1507.jar')
    compile files('libs/MobTools-2016.0816.1507.jar')
}
