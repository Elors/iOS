swagger: '2.0'
info:
  title: Mala API
  description: Mala API for app
  version: '1.2'
host: malalaoshi.com
schemes:
  - https
basePath: /api/v1
produces:
  - application/json

# define parameters that can be used across operations, not global parameters for all operations.
parameters:
  authTokenHeader:
    name: HTTP_AUTHORIZATION
    in: header
    description: auth token.
    required: true
    type: string
    format: Token XXXXXXXX
  subject_id:
    name: subject_id
    in: path
    description: Subject ID.
    required: true
    type: integer

# The available paths and operations for the API.
paths:
  /study_report:
    get:
      summary: Subjects Summary
      description: Get the student all subjects summary info
      tags:
        - Subjects Summary
      parameters:
        - $ref: '#/parameters/authTokenHeader'
      responses:
        '200':
          description: An array of subjects those the user took or bought
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/definitions/SimpleReportSummary'
  /study_report/{subject_id}:
    get:
      summary: One Subject Report Data
      description: Get One Subject Report Data by Subject ID
      tags:
        - One Subject Report
      parameters:
        - $ref: '#/parameters/authTokenHeader'
        - $ref: '#/parameters/subject_id'
      responses:
        '200':
          description: An array of subjects
          schema:
            $ref: '#/definitions/SubjectReport'
  /my_center:
    get:
      summary: Personal center data of parent client app
      description: In parent client app, return some personal info data, such as unpaid orders count, todo comment courses count
      tags:
        - Personal Center
      parameters:
        - $ref: '#/parameters/authTokenHeader'
      responses:
        '200':
          description: An object of such data related with orders and courses
          schema:
            type: object
            properties:
              unpaid_num:
                type: integer
                description: number of unpaid orders
              tocomment_num:
                type: integer
                description: number of courses to do comment

# define models
definitions:
  SimpleReportSummary:
    type: object
    properties:
      subject_id:
        type: integer
        description: |
          Subject ID.
          (Now only support math)
      supported:
        type: boolean
        description: whether support the subject or not. if null then supported
      purchased:
        type: boolean
        description: whether the user has bought the subject
      grade_id:
        type: integer
        description: ID of student's grade when the order is created
      total_nums:
        type: integer
        description: |
          total number of exercises. 0 means no report.
          (Optional, if not supported, it's empty)
      right_nums:
        type: integer
        description: |
          number of exercises those were done correctly.
          (Optional, if not supported, it's empty)
  SubjectReport:
    type: object
    properties:
      subject_id:
        type: integer
        description: |
          Subject ID.
          (Now only support math)
      grade_id:
        type: integer
        description: ID of student's grade when the order is created
      total_nums:
        type: integer
        description: |
          total number of exercises. 0 means no report.
          (Optional, if not supported, it's empty)
      right_nums:
        type: integer
        description: |
          number of exercises those were done correctly.
          (Optional, if not supported, it's empty)
      exercise_total_nums:
        type: integer
        description: 累计答题次数
      exercise_fin_nums:
        type: integer
        description: 累计答题完成数
      error_rates:
        $ref: '#/definitions/ExerciseErrorDistribution'
      month_trend:
        $ref: '#/definitions/ExerciseMonthTrend'
      knowledges_accuracy:
        $ref: '#/definitions/KnowledgePointAccuracy'
      abilities:
        $ref: '#/definitions/AbilityStructure'
      score_analyses:
        $ref: '#/definitions/ScoreAnalyses'
  ExerciseErrorDistribution:
    description: 错题分布
    type: array
    items:
      $ref: '#/definitions/ExerciseErrorDistributionItem'
  ExerciseErrorDistributionItem:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      rate:
        type: number
  ExerciseMonthTrend:
    description: 按月显示练习量走势
    type: array
    items:
      $ref: '#/definitions/ExerciseMonthTrendItem'
  ExerciseMonthTrendItem:
    type: object
    properties:
      total_item:
        type: integer
      error_item:
        type: integer
      year:
        type: integer
      month:
        type: integer
      day:
        type: integer
        description: 1, 上旬 16, 下旬
  KnowledgePointAccuracy:
    description: 知识点正确率
    type: array
    items:
      $ref: '#/definitions/KnowledgePointAccuracyItem'
  KnowledgePointAccuracyItem:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      total_item:
        type: integer
      right_item:
        type: integer
  AbilityStructure:
    type: array
    description: |
      能力结构分析(Abilities Structure. A list of ability <key-value>)
    items:
      $ref: '#/definitions/AbilityStructureItem'
  AbilityStructureItem:
    type: object
    properties:
      key:
        type: string
        description: ability key string
        enum:
          - abstract: 抽象概括能力
          - reason: 推理论证能力
          - appl: 实际应用能力
          - spatial: 空间想象能力
          - calc: 运算求解能力
          - data: 数据分析能力
      val:
        type: number
        format: float
  ScoreAnalyses:
    description: 提分点分析(各知识点全部用户平均得分率及指定学生得分率)
    type: array
    items:
      $ref: '#/definitions/ScoreAnalysesItem'
  ScoreAnalysesItem:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      my_score:
        type: number
        format: float
      ave_score:
        type: number
        format: float
